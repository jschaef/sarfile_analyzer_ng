apiVersion: v1
kind: Secret
metadata:
  name: nginx-ssl-secret
type: Opaque
data:
  ssl_certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk...
  ssl_certificate_key: ...

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      tier: nginx-frontend
  template:
    metadata:
      labels:
        app: nginx
        tier: nginx-frontend
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        resources:
          limits:
            cpu: "500m"
            memory: "1024Mi"
          requests:
            cpu: "250m"
            memory: "256Mi"
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/nginx/ssl
          readOnly: true
        - name: config-volume
          mountPath: /etc/nginx/conf.d/sarfile-analyzer.conf
          subPath: sarfile-analyzer.conf
      volumes:
      - name: ssl-certs
        secret:
          secretName: nginx-ssl-secret
      - name: config-volume
        configMap:
          name: sarfile-analyzer-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sarfile-analyzer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sarfile-analyzer
      tier: sarfile-analyzer-backend
  template:
    metadata:
      labels:
        app: sarfile-analyzer
        tier: sarfile-analyzer-backend
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: sarfile-analyzer
        image: <path to registry and image for e.g. docker pull, e.g.: bla.registry.com/project/streamlit-sarfile-analyzer@sha256:72cc4cc3b129463b3972c3839084dd2267cfe4c13bcfad07526fd6b8efd1b97e>
        ports:
        - containerPort: 8501
        volumeMounts:
        - name: config-toml
          mountPath: /sarfile_analyzer_ng/code/.streamlit/config.toml
          subPath: config.toml
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: ADMIN_EMAIL
          value: "<your email>"
        - name: "REDIS_HOST"
          value: sarfile-redis-server
      volumes:
      - name: config-toml
        configMap:
          name: config-toml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: '0.5'
              memory: 1Gi
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-toml
data:
  config.toml: |
    [server]
    maxUploadSize = 600
    enableWebsocketCompression = false
    maxMessageSize = 1000
    enableXsrfProtection = false
    enableCORS = false

    [runner]
    fastReruns = false

    [theme]
    primaryColor="#6eb52f"
    backgroundColor="#FFFFFF"
    secondaryBackgroundColor="#F5FDFD"
    textColor="#262730"
    font="sans serif"

    [logger]
    level = "info"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sarfile-analyzer-config
data:
  sarfile-analyzer.conf: |
    upstream Backend {
      server sarfile-analyzer-service;
    }
    server {
      listen 80;
      server_name <dns server name for the nginx container>;
      #server_name sarfile-analyzer.yourdomain.com;
      location / {
        return 301 https://$host$request_uri;
      }
    }

    server {
    listen              443 ssl;
    server_name         sarfile-analyzer.<your.domain>; # reflecting the certificates below and in nginx-ssl-secret
    ssl_certificate     /etc/nginx/ssl/ssl_certificate;
    ssl_certificate_key /etc/nginx/ssl/ssl_certificate_key;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;";
    
    location / {
      client_max_body_size 2048M;
      proxy_pass http://Backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # proxy_buffering    off;
      proxy_read_timeout 86400;
      }

    location ^~ /static {
      proxy_pass http://Backend/static/;
      }
    location ^~ /vendor {
      proxy_pass http://Backend/vendor;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
    tier: nginx-frontend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: sarfile-analyzer-service
spec:
  type: ClusterIP
  selector:
    app: sarfile-analyzer
    tier: sarfile-analyzer-backend
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8501
---
apiVersion: v1
kind: Service
metadata:
  name: sarfile-redis-server
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
